/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.fub.mapsforge.project.detector.wizards.detector;

import javax.swing.JPanel;
import org.openide.explorer.ExplorerManager;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.util.NbBundle;

@NbBundle.Messages({
    "CLT_TransportMode_And_Trainingset=Transport modes & Trainingsset"
})
public final class TrainingSetSelectionVisualPanel extends JPanel implements ExplorerManager.Provider {

    private static final long serialVersionUID = 1L;
    private final ExplorerManager explorerManager = new ExplorerManager();

    /**
     * Creates new form TrainingSetSelectionVisualPanel
     */
    public TrainingSetSelectionVisualPanel() {
        initComponents();
        outlineView.getOutline().setRootVisible(false);
        getExplorerManager().setRootContext(new AbstractNode(Children.LEAF));
    }

    @Override
    public String getName() {
        return Bundle.CLT_TransportMode_And_Trainingset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        outlineView = new org.openide.explorer.view.OutlineView(Bundle.CLT_TransportMode_And_Trainingset());

        setLayout(new java.awt.BorderLayout());

        outlineView.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        outlineView.setPreferredSize(new java.awt.Dimension(400, 300));
        add(outlineView, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openide.explorer.view.OutlineView outlineView;
    // End of variables declaration//GEN-END:variables

    @Override
    public ExplorerManager getExplorerManager() {
        return explorerManager;
    }
}
